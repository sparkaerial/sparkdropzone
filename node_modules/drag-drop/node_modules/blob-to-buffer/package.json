{
  "name": "blob-to-buffer",
  "description": "Convert a Blob to a Buffer",
  "version": "1.2.0",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bugs": {
    "url": "https://github.com/feross/blob-to-buffer/issues"
  },
  "dependencies": {
    "typedarray-to-buffer": "^3.0.1"
  },
  "devDependencies": {
    "tape": "^3.0.3",
    "zuul": "^1.11.2"
  },
  "homepage": "https://github.com/feross/blob-to-buffer",
  "keywords": [
    "convert",
    "blob",
    "buffer",
    "browserify",
    "filereader"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/blob-to-buffer.git"
  },
  "scripts": {
    "test": "zuul -- test/*.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/10..latest",
      "chrome/25..latest",
      "firefox/20..latest",
      "safari/6..latest",
      "opera/15.0..latest"
    ]
  },
  "readme": "# blob-to-buffer [![Build Status][travis-image]][travis-url] [![NPM Version][npm-image]][npm-url] [![NPM Downloads][downloads-image]][downloads-url]\n\n#### Convert a Blob to a [Buffer](https://github.com/feross/buffer).\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/blob-to-buffer.svg)](https://saucelabs.com/u/blob-to-buffer)\n\nSay you're using the ['buffer'](https://github.com/feross/buffer) module on npm, or\n[browserify](http://browserify.org/) and you're working with lots of binary data.\n\nUnfortunately, sometimes the browser or someone else's API gives you a `Blob`. Silly\nbrowser. How do you convert it to a `Buffer`?\n\nSomething with a goofy `FileReader` thingy... Time to Google for it yet again... There must be a better way!\n\n***There is! Simply use this module!***\n\nWorks in the browser. This module is used by [WebTorrent](http://webtorrent.io)!\n\n### install\n\n```\nnpm install blob-to-buffer\n```\n\n### usage\n\n```js\nvar toBuffer = require('blob-to-buffer')\n\n// Get a Blob somehow...\nvar blob = new Blob([ new Uint8Array([1, 2, 3]) ], { type: 'application/octet-binary' })\n\nvar buffer = toBuffer(blob, function (err, buffer) {\n  if (err) throw err\n\n  buffer[0] // => 1\n  buffer.readUInt8(1) // => 2\n})\n```\n\n### license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n\n[travis-image]: https://img.shields.io/travis/feross/blob-to-buffer.svg?style=flat\n[travis-url]: https://travis-ci.org/feross/blob-to-buffer\n[npm-image]: https://img.shields.io/npm/v/blob-to-buffer.svg?style=flat\n[npm-url]: https://npmjs.org/package/blob-to-buffer\n[downloads-image]: https://img.shields.io/npm/dm/blob-to-buffer.svg?style=flat\n[downloads-url]: https://npmjs.org/package/blob-to-buffer\n",
  "readmeFilename": "README.md",
  "_id": "blob-to-buffer@1.2.0",
  "dist": {
    "shasum": "6989bc6224082171b461ae2b82460cf27eb718b4"
  },
  "_from": "blob-to-buffer@^1.0.2",
  "_resolved": "https://registry.npmjs.org/blob-to-buffer/-/blob-to-buffer-1.2.0.tgz"
}
