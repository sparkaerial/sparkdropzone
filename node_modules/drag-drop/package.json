{
  "name": "drag-drop",
  "description": "HTML5 drag & drop for humans",
  "version": "2.0.0",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bugs": {
    "url": "https://github.com/feross/drag-drop/issues"
  },
  "dependencies": {
    "blob-to-buffer": "^1.0.2",
    "lodash.throttle": "^2.4.1",
    "run-parallel": "^1.0.0"
  },
  "devDependencies": {
    "browserify": "^5.10.0",
    "tape": "2.x",
    "uglify-js": "^2.4.15"
  },
  "homepage": "https://github.com/feross/drag-drop",
  "keywords": [
    "drag",
    "drop",
    "dnd",
    "drag and drop",
    "drag drop",
    "html5",
    "drag & drop",
    "frontent",
    "browserify"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/drag-drop.git"
  },
  "scripts": {
    "test": "tape test/*.js",
    "prepublish": "npm run build",
    "build": "browserify -s DragDrop -r ./ | uglifyjs -c warnings=false -m > dragdrop.bundle.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/10..latest",
      "chrome/25..latest",
      "firefox/20..latest",
      "safari/6..latest",
      "opera/15.0..latest"
    ]
  },
  "readme": "# drag-drop [![travis](https://img.shields.io/travis/feross/drag-drop.svg)](https://travis-ci.org/feross/drag-drop) [![npm](https://img.shields.io/npm/v/drag-drop.svg)](https://npmjs.org/package/drag-drop) [![downloads](https://img.shields.io/npm/dm/drag-drop.svg)](https://npmjs.org/package/drag-drop) [![gittip](https://img.shields.io/gittip/feross.svg)](https://www.gittip.com/feross/)\n\n### HTML5 drag & drop for humans\n\n[![browser support](https://ci.testling.com/feross/drag-drop.png)](https://ci.testling.com/feross/drag-drop)\n\nIn case you didn't know, the\n[HTML5 drag and drop API](https://developer.mozilla.org/en-US/docs/Using_files_from_web_applications)\nis a\n[total disaster](http://www.quirksmode.org/blog/archives/2009/09/the_html5_drag.html)!\nThis is an attempt to make the API usable by mere mortals.\n\nThis module works in the browser with [browserify](http://browserify.org/) and it's used\nby [WebTorrent](http://webtorrent.io)!\n\n**Note:** If you're not using browserify, then use the included standalone file\n`dragdrop.bundle.js`. This exports a `DragDrop` function on `window`.\n\n### features\n\n- simple API\n- adds a `drag` class to the drop target on hover, for easy styling!\n- optionally, get the file(s) as a Buffer (see [buffer](https://github.com/feross/buffer))\n\n### install\n\n```\nnpm install drag-drop\n```\n\n### usage\n\n```js\nvar dragDrop = require('drag-drop')\n\ndragDrop('#dropTarget', function (files, pos) {\n  console.log('Here are the dropped files', files)\n  console.log('Dropped at coordinates', pos.x, pos.y)\n})\n```\n\nAnother handy thing this does is add a `drag` class to the drop target when the user\nis dragging a file over the drop target. Useful for styling the drop target to make\nit obvious that this is a drop target!\n\n### a more complete example\n\n```js\nvar dragDrop = require('drag-drop')\n\n// You can pass in a DOM node or a selector string!\ndragDrop('#dropTarget', function (files) {\n  console.log('Here are the dropped files', files)\n\n  // `files` is an Array!\n  files.forEach(function (file) {\n    console.log(file.name)\n    console.log(file.size)\n    console.log(file.type)\n    console.log(file.lastModifiedData)\n\n    // convert the file to a Buffer that we can use!\n    var reader = new FileReader()\n    reader.addEventListener('load', function (e) {\n      // e.target.result is an ArrayBuffer\n      var arr = new Uint8Array(e.target.result)\n      var buffer = new Buffer(arr)\n\n      // do something with the buffer!\n    })\n    reader.addEventListener('error', function (err) {\n      console.error('FileReader error' + err)\n    })\n    reader.readAsArrayBuffer(file)\n  })\n})\n```\n\n### get files as buffers\n\nIf you prefer to access file data as Buffers, then just require drag-drop like this:\n\n```js\nvar dragDrop = require('drag-drop/buffer')\n\ndragDrop('#dropTarget', function (files) {\n  files.forEach(function (file) {\n    // file is actually a buffer!\n    console.log(file.readUInt32LE(0))\n    console.log(file.toJSON())\n    console.log(file.toString('hex')) // etc...\n\n    // but it still has all the normal file properties!\n    console.log(file.name)\n    console.log(file.size)\n    console.log(file.type)\n    console.log(file.lastModifiedDate)\n  })\n}\n\n```\n\n### license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "_id": "drag-drop@2.0.0",
  "dist": {
    "shasum": "19ef789d30631b967c53c93a8a8fe4f477c14f87"
  },
  "_from": "drag-drop@",
  "_resolved": "https://registry.npmjs.org/drag-drop/-/drag-drop-2.0.0.tgz"
}
